version: '3.8'

services:
  otel-demo-api:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "5000:8080" # Map HTTP port 8080 in the container to 5000 on the host
      - "5001:8081" # Map HTTPS port 8081 in the container to 5001 on the host
    environment:
      - ASPNETCORE_ENVIRONMENT=Development # Set the environment to Development
    depends_on:
      - otel-collector # Ensure otel-collector service is started before this service

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel-collector-config.yml:/etc/otelcol-contrib/config.yaml # Mount the OpenTelemetry Collector configuration file
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
      - "8889:8889" # Health check endpoint
    depends_on:
      - jaeger # Ensure Jaeger service is started before this service
      - prometheus # Ensure Prometheus service is started before this service
      - loki # Ensure Loki service is started before this service

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # Jaeger UI
      - "6831:6831/udp" # Jaeger agent
    environment:
      - COLLECTOR_OTLP_ENABLED=true # Enable OTLP in Jaeger collector

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml # Mount the Prometheus configuration file
    ports:
      - "9090:9090" # Prometheus UI

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000" # Grafana UI
    depends_on:
      - prometheus # Ensure Prometheus service is started before this service
      - loki # Ensure Loki service is started before this service

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100" # Loki API
